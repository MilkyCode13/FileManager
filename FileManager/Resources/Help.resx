<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="HelpConsole" xml:space="preserve">
        <value>Общие принципы работы с консолью
================================

Командная строка
----------------

В начале работы вас встречает командная строка:

[FileManager]$

В квадратных скобках указано название текущей директории, а цвет знака `$` отображает статус выполнения предыдущей команды: зелёный — успешно, красный — ошибка.


Команды, опции и аргументы
--------------------------

Для выполнения какого-либо действия требуется ввести команду и нажать клавишу `Enter`. Каждая
команда состоит из собственно названия команды, опций и аргументов. Например, в команде

find -r . *.pdf

Есть опция `r`, а также аргументы `.` и `*.pdf`. Можно задавать несколько опций следующим образом:

copy -rf Test1/ Test2/

В этом примере опции две: `r` и `f`. При этом стоит упомянуть, что опции должны идти слитно
непосредственно после названия команды. То есть следующие команды не сработают:

copy -r -f Test1/ Test2/
copy -r Test1/ -f Test2/
copy Test1/ Test2/ -rf

Если аргумент содержит пробелы, то его необходимо взять в кавычки `"` или `'`, чтобы избежать его
восприятия как двух отдельных документов:

dir "New Folder"
dir 'New Folder'

При этом каждая кавычка, которая является частью аргумента, должна находиться внутри кавычек
другого типа:

show 'Operation "Super Secret"'

Таким образом можно даже выражать аргументы, содержащие одновременно оба типа кавычек:

touch text.txt "There are 'quotes1' and "'"quotes2"'

В данном примере второй аргумент будет распознан как `There are 'quotes1' and "quotes2"`.


Ввод команд
-----------

Предусмотрено несколько действий, упрощающих ввод команды. Следующие клавиши имеют специальные
действия:

| Клавиша                  | Действие                                                    
| ------------------------ | ------------------------------------------------------------------- |
| `Tab`                    | Дополнение названия команды или аргумента (чаще всего пути), при    |
|                          | повторном нажатии — вывод всех возможных вариантов команды или      |
|                          | аргумента.                                                          |
| Стрелки влево или вправо | Перемещение по введённой команде влево или вправо.                  |
| Стрелки вверх или вниз   | Перемещение по истории команд: вверх — более старые команды, вниз — |
|                          | более новые.                                                        |
| `Home` и `End`           | Перемещение в начало (`Home`) или конец (`End`) введённой команды.  |
| `Backspace` и `Delete`   | Удаление символа перед (`Backspace`) или на (`Delete`) курсоре.     |
| `Enter`                  | Выполнение команды.                                                 |

Помимо этого, при введении команды серым цветом отображается подсказка, которая при нажатии `Tab`
будет введена.

</value>
    </data>
    <data name="HelpCommandExit" xml:space="preserve">
        <value>`exit`
======

Данная команда предназначена для выхода из программы.

Использование:
| Синтаксис | Описание           |
| --------- | ------------------ |
| `exit`    | Выход из программы |

</value>
    </data>
    <data name="HelpCommandHelp" xml:space="preserve">
        <value>`help` (`man`, `?`)
===================

Данная команда предназначена для просмотра справки.

Использование:
| Синтаксис       | Описание                                   |
| --------------- | ------------------------------------------ |
| `help`          | Вывод общей справки                        |
| `help console`  | Вывод справки по общей работе консоли      |
| `help commands` | Вывод списка команд с их кратким описанием |
| `help command`  | Вывод справки по команде `command`         |

Также можно вместо `help` использовать его псевдонимы `man` и `?`.

</value>
    </data>
    <data name="HelpCommands" xml:space="preserve">
        <value>Список и описание команд
========================

В этом разделе будут подробно описан синтаксис и механизм работы каждой из следующих команд:

| Команда                          | Действие                                         |
| -------------------------------- | ------------------------------------------------ |
| `help`, `man` или `?`            | Справка                                          |
| `exit`                           | Выход                                            |
| `drive`                          | Список или выбор диска                           |
| `cd`                             | Смена текущей директории                         |
| `pwd`                            | Вывод пути текущей директории                    |
| `dir` или `ls`                   | Вывод содержимого директории                     |
| `find`                           | Поиск файлов и директорий по маске или выражению |
| `show`, `cat`, `more` или `less` | Вывод содержимого файла в выбранной кодировке    |
| `copy` или `cp`                  | Копирование                                      |
| `move` или `mv`                  | Перемещение                                      |
| `delete`, `del` или `rm`         | Удаление                                         |
| `create` или `touch`             | Создание текстового файла                        |
| `concat`                         | Конкатенация файлов                              |
| `diff`                           | Вывод различий двух файлов                       |

</value>
    </data>
    <data name="HelpCommandDrive" xml:space="preserve">
        <value>`drive`
=======

Данная команда предназначена для просмотра списка дисков и выбора определённого диска.

Использование:
| Синтаксис          | Описание                                                                  |
| ------------------ | --------------------------------------------------------------------------|
| `drive`            | Вывод списка дисков на компьютере                                         |
| `drive drive_name` | Установка `drive_name` как текущего диска (текущей директорией становится |
|                    | корень этого диска)                                                       |

</value>
    </data>
    <data name="HelpCommandChangeDirectory" xml:space="preserve">
        <value>`cd`
====

Данная команда предназначена для смены текущей директории.

Использование:
| Синтаксис      | Описание                                |
| -------------- | --------------------------------------- |
| `cd directory` | Смена текущей директории на `directory` |

</value>
    </data>
    <data name="HelpCommandShowCurrentDirectory" xml:space="preserve">
        <value>`pwd`
=====

Данная команда предназначена для просмотра пути к текущей директории.

Использование:
| Синтаксис | Описание                        |
| --------- | ------------------------------- |
| `pwd`     | Вывод пути к текущей директории |

</value>
    </data>
    <data name="HelpCommandShowDirectoryContents" xml:space="preserve">
        <value>`dir` (`ls`)
============

Данная команда предназначена для просмотра содержимого директории.

Использование:
| Синтаксис       | Описание                           |
| --------------- | -----------------------------------|
| `dir`           | Вывод общей справки                |
| `dir directory` | Вывод справки по команде `command` |

Также можно вместо `dir` использовать его псевдоним `ls`.

</value>
    </data>
    <data name="HelpCommandFind" xml:space="preserve">
        <value>`find`
======

Данная команда предназначена для поиска файлов или директорий по **маске** или **выражению**.

| Примечание по терминологии
|
| **«Маска»** — строка, предназначенная для поиска по названию **файла**.
|
| | Маска        | Комментарий                                                                   |
| | ------------ | ----------------------------------------------------------------------------- |
| | `*.txt`      | Будут найдены файлы с расширением `.txt`                                      |
| | `*.doc?`     | Будут найдены все файлы, расширение которого начинается с `.doc` и вместо `?` |
| |              | содержит какой-то символ (а так как `?` находится в конце, его может и не     |
| |              | быть). Например, `.doc`, `.docx`, `.docs` и так далее                         |
| | `sec???.txt` | Например, найдутся файлы `secret.txt`, `second.txt` и так далее               |
|
| **«Выражение»** — строка, предназначенная для поиска по **пути**.
|
| | Выражение                            | Комментарий                                            |
| | ------------------------------------ | ------------------------------------------------------ |
| | `/*/*`                               | Найдёт все файлы или директории, находящиеся в         |
| |                                      | каждой директории в корне.                             |
| | `C:\Windows\Users\username\*\*.pdf`  | Найдёт все файлы с расширением `.pdf`, находящиеся     |
| | (для Windows) или                    | в любой директории в домашней директории пользователя. |
| | `/home/username/*/*.pdf` (для Linux) |                                                        |
|
| ВАЖНО! Ни маска, ни выражение **не является** регулярным выражением!

Использование:
| Синтаксис                   | Описание                                                           |
| --------------------------- | ------------------------------------------------------------------ |
| `find expression`           | Поиск по **выражению** `expression` (в данном случае **маска**     |
|                             | тоже работает как поиск в текущей директории)                      |
| `find -r pattern`           | Поиск по **маске** `pattern` **рекурсивно** (то есть в директории  |
|                             | и всех её поддиректориях) в текущей директории.                    |
| `find directory pattern`    | Поиск по **маске** `pattern` в выбранной директории `directory`    |
| `find -r directory pattern` | Поиск по **маске** `pattern` **рекурсивно** в выбранной директории |
|                             | `directory`                                                        |

</value>
    </data>
    <data name="HelpCommandShowFile" xml:space="preserve">
        <value>`show` (`cat`, `more`, `less`)
==============================

Данная команда предназначена для просмотра содержимого файла в выбранной кодировке.

| Примечание
|
| Кодировка по умолчанию, а также выбор кодировок зависит от системы. Выбор кодировок при этом может
| быть просмотрен с помощью двойного нажатия `Tab`.
|
| Например, для Linux доступны кодировки `utf-16`, `utf-16BE`, `utf-32`, `utf-32BE`, `us-ascii`,
| `iso-8859-1` и `utf-8`.

Использование:
| Синтаксис            | Описание                                                               |
| -------------------- | ---------------------------------------------------------------------- |
| `show file`          | Вывод содержимого файла `file` в кодировке по умолчанию (зависит от    |
|                      | системы)                                                               |
| `show encoding file` | Вывод содержимого файла `file` в выбранной кодировке `encoding` (выбор |
|                      | кодировок зависит от системы)                                          |

Также можно вместо `show` использовать его псевдонимы `cat`, `more` и `less`.

</value>
    </data>
    <data name="HelpCommandCopy" xml:space="preserve">
        <value>`copy` (`cp`)
=============

Данная команда предназначена для копирования файлов и директорий.

Использование:
| Синтаксис                    | Описание                                                         |
| ---------------------------- | ---------------------------------------------------------------- |
| `copy src dest`              | Копирование файла `src` в `dest`_                                |
| `copy -r src dest`           | **Рекурсивное** копирование директории `src` в `dest`            |
| `copy -r src dest/`          | **Рекурсивное** копирование директории `src` внутрь директории   |
|                              | `dest`                                                           |
| `copy -r src/ dest/`         | **Рекурсивное** копирование содержимого директории `src` внутрь  |
|                              | директории `dest`                                                |
| `copy -rp pattern src dest`  | **Рекурсивное** копирование содержимого директории `src`         |
|                              | **по маске** `pattern` внутрь директории `dest`                  |
| ---------------------------- | ---------------------------------------------------------------- |
| `copy -f src dest`           | То же самое, что и без `-f`, но **без подтверждения** перезаписи |
| `copy -rf src dest` или      | файлов                                                           |
| `copy -rfp pattern src dest` |                                                                  |

Также можно вместо `copy` использовать его псевдоним `cp`.

</value>
    </data>
    <data name="HelpCommandMove" xml:space="preserve">
        <value>`move` (`mv`)
=============

Данная команда предназначена для перемещения файлов.

Использование:
| Синтаксис          | Описание                                                                    |
| ------------------ | --------------------------------------------------------------------------- |
| `move src dest`    | Перемещение файла из `src` в `dest`                                         |
| `move -f src dest` | Перемещение файла из `src` в `dest` **без подтверждения** перезаписи файлов |

Также можно вместо `move` использовать его псевдоним `mv`.

</value>
    </data>
    <data name="HelpCommandDelete" xml:space="preserve">
        <value>`delete` (`del`, `rm`)
======================

Данная команда предназначена для удаления файлов.

Использование:
| Синтаксис     | Описание              |
| ------------- | --------------------- |
| `delete file` | Удаление файла `file` |

Также можно вместо `delete` использовать его псевдонимы `del` и `rm`.

</value>
    </data>
    <data name="HelpCommandCreateFile" xml:space="preserve">
        <value>`create` (`touch`)
==================

Данная команда предназначена для создания простого текстового файла в выбранной кодировке.

| Примечание
|
| Кодировка по умолчанию, а также выбор кодировок зависит от системы. Выбор кодировок при этом может
| быть просмотрен с помощью двойного нажатия `Tab`.
|
| Например, для Linux доступны кодировки `utf-16`, `utf-16BE`, `utf-32`, `utf-32BE`, `us-ascii`,
| `iso-8859-1` и `utf-8`.

Использование:
| Синтаксис                   | Описание                                                         |
| --------------------------- | ---------------------------------------------------------------- |
| `create file`               | Создать пустой файл `file` в кодировке по умолчанию (зависит от  |
|                             | системы)                                                         |
| `create file text`          | Создать файл `file` с содержимым `text` в кодировке по умолчанию |
|                             | (зависит от системы)                                             |
| `create file encoding text` | Создать файл `file` с содержимым `text` в кодировке `encoding`   |
|                             | (выбор кодировок зависит от системы)                             |

Также можно вместо `create` использовать его псевдоним `touch`.

</value>
    </data>
    <data name="HelpCommandConcatenate" xml:space="preserve">
        <value>`concat`
========

Данная команда предназначена для конкатенации двух и более файлов.

Использование:
| Синтаксис                        | Описание                                         |
| -------------------------------- | ------------------------------------------------ |
| `concat file1 file2 [... fileN]` | Конкатенация файлов `file1`, `file2` и так далее |

</value>
    </data>
    <data name="HelpCommandDiff" xml:space="preserve">
        <value>`diff`
======

Данная команда предназначена для просмотра различий в двух файлах.

| Примечание
|
| В `diff` один из файлов принимается за оригинал (_`original`_), а другой за изменённый (_`new`_).
| Строки, которые встречаются в оригинальном файле, но отсутствуют в изменённом, отображаются
| красным цветом и знаком `-`, а строки, которые появились в изменённом файле, отображаются зелёным
| цветом и знаком `+`.

Использование:
| Синтаксис           | Описание                     |
| ------------------- | ---------------------------- |
| `diff original new` | Вывод различий в двух файлах |

</value>
    </data>
</root>